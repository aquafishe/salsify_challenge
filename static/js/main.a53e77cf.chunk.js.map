{"version":3,"sources":["resources/datastore.js","components/PropertySelect.js","util/operatorHelper.js","util/operatorMap.js","components/OperatorSelect.js","components/MutliValueSelect.js","components/Filter.js","components/ProductTable.js","App.js","reportWebVitals.js","index.js"],"names":["window","datastore","getProducts","this","products","getProperties","properties","getOperators","operators","id","property_values","property_id","value","name","type","values","text","PropertySelect","propertyValue","formProps","handleChange","FormControl","Select","inputProps","onChange","style","displayEmpty","MenuItem","disabled","map","property","capitalize","stringifyValue","toString","operatorMap","fn","productValue","length","toUpperCase","console","log","valueArr","lessThan","match","forEach","includes","OperatorSelect","operatorInput","propertyInputType","operator","useStyles","makeStyles","mutliSelectForm","textAlign","minWidth","width","MutliValueSelect","valueInput","distinctPropertyValues","classes","variant","className","multiple","input","Input","initialState","propertyInput","formStyle","filterContainer","float","margin","btnContainer","filterInput","marginLeft","marginRight","Filter","props","getDistinctPropertyValues","data","propertyId","distinctPropValues","product","Object","keys","filterData","state","push","updateFilteredData","event","target","newState","currentTarget","dataset","propertyType","operatorId","find","Array","setState","prevState","clearInputs","TextField","Button","textTransform","onClick","Component","container","borderBottom","tableRow","background","header","fontWeight","paddingTop","paddingBottom","ProductTable","Box","TableContainer","Table","table","TableHead","TableRow","index","TableCell","TableBody","App","loadDataStore","parseProductData","filteredData","isDataLoaded","productData","Container","mt","borderTop","borderLeft","borderRight","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","String","prototype","charAt","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAAAA,OAAOC,UAAY,CACjBC,YAAa,WACX,OAAOC,KAAKC,UAGdC,cAAe,WACb,OAAOF,KAAKG,YAGdC,aAAc,WACZ,OAAOJ,KAAKK,WAGdJ,SAAU,CACR,CACEK,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,cAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,eAET,CACED,YAAa,EACbC,MAAO,WAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,cAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,eAET,CACED,YAAa,EACbC,MAAO,UAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,YAET,CACED,YAAa,EACbC,MAAO,QAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,eAET,CACED,YAAa,EACbC,MAAO,WAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,OAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,iBAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,OAET,CACED,YAAa,EACbC,MAAO,UAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,WAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,UAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,IAET,CACED,YAAa,EACbC,MAAO,YAMfN,WAAY,CACV,CACEG,GAAI,EACJI,KAAM,eACNC,KAAM,UAER,CACEL,GAAI,EACJI,KAAM,QACNC,KAAM,UAER,CACEL,GAAI,EACJI,KAAM,cACNC,KAAM,UAER,CACEL,GAAI,EACJI,KAAM,WACNC,KAAM,aACNC,OAAQ,CACN,QAC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","file":"static/js/main.a53e77cf.chunk.js","sourcesContent":["window.datastore = {\r\n  getProducts: function() {\r\n    return this.products;\r\n  },\r\n\r\n  getProperties: function() {\r\n    return this.properties;\r\n  },\r\n\r\n  getOperators: function() {\r\n    return this.operators;\r\n  },\r\n\r\n  products: [\r\n    {\r\n      id: 0,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Headphones'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'black'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 5\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'electronics'\r\n        },\r\n        {\r\n          property_id: 4,\r\n          value: 'false'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 1,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Cell Phone'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'black'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 3\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'electronics'\r\n        },\r\n        {\r\n          property_id: 4,\r\n          value: 'true'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Keyboard'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'grey'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 5\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'electronics'\r\n        },\r\n        {\r\n          property_id: 4,\r\n          value: 'false'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Cup'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'white'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 3\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'kitchenware'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Key'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'silver'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 1\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'tools'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 5,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Hammer'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'brown'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 19\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'tools'\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  properties: [\r\n    {\r\n      id: 0,\r\n      name: 'Product Name',\r\n      type: 'string'\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'color',\r\n      type: 'string'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'weight (oz)',\r\n      type: 'number'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'category',\r\n      type: 'enumerated',\r\n      values: [\r\n        'tools',\r\n        'electronics',\r\n        'kitchenware'\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'wireless',\r\n      type: 'enumerated',\r\n      values: [\r\n        'true',\r\n        'false'\r\n      ]\r\n    }\r\n  ],\r\n\r\n  operators: [\r\n    {\r\n      text: 'Equals',\r\n      id: 'equals'\r\n    },\r\n    {\r\n      text: 'Is greater than',\r\n      id: 'greater_than'\r\n    },\r\n    {\r\n      text: 'Is less than',\r\n      id: 'less_than'\r\n    },\r\n    {\r\n      text: 'Has any value',\r\n      id: 'any'\r\n    },\r\n    {\r\n      text: 'Has no value',\r\n      id: 'none'\r\n    },\r\n    {\r\n      text: 'Is any of',\r\n      id: 'in'\r\n    },\r\n    {\r\n      text: 'Contains',\r\n      id: 'contains'\r\n    }\r\n  ]\r\n}\r\n","import React from 'react';\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n} from '@material-ui/core';\r\n\r\nconst PropertySelect = ({ propertyValue, properties, formProps, handleChange }) => {\r\n\treturn (\r\n\t\t<FormControl>\r\n\t\t\t<Select\r\n\t\t\t\tname=\"propertyInput\"\r\n\t\t\t\tid=\"propertyInput\"\r\n\t\t\t\tvalue={propertyValue}\r\n\t\t\t\tinputProps={{ 'aria-label': 'Without label' }}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tstyle={formProps}\r\n\t\t\t\tdisplayEmpty\r\n\t\t\t>\r\n\t\t\t\t<MenuItem value=\"\" disabled>\r\n\t\t\t\t\tSelect a Property...\r\n              </MenuItem>\r\n\t\t\t\t{properties.map(property => (\r\n\t\t\t\t\t//using data attributes to add more data to select drop down options\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tkey={property.id}\r\n\t\t\t\t\t\tdata-property-id={property.id}\r\n\t\t\t\t\t\tdata-property-type={property.type}\r\n\t\t\t\t\t\tvalue={property.name}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{property.name.capitalize()}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport default PropertySelect;"," /**\r\n  * Helper fn used to return Stringify value to compare correctly\r\n  * @param {*} value \r\n  * @returns \r\n  */\r\nconst stringifyValue = (value) => {\r\n  if (value === null) return \"null\";\r\n  if (typeof value === 'number') return value.toString();\r\n  return value;\r\n}\r\n\r\nconst equals = (productValue, value) => {\r\n  if (value.length == 0) return false\r\n  productValue = stringifyValue(productValue);\r\n  return value[0].toUpperCase() === productValue.toUpperCase();\r\n}\r\n\r\nconst greaterThan = (productValue, value) => {\r\n  return value < productValue;\r\n}\r\n\r\nconst lessThan = (productValue, value) => {\r\n  return value > productValue;\r\n}\r\n\r\nconst any = (productValue) => {\r\n  return productValue !== null\r\n}\r\n\r\nconst none = (productValue) => {\r\n  console.log(productValue)\r\n  return productValue === null\r\n}\r\n\r\n//need to change fn to 'within' instead of id: 'in' since 'in' is js keyword\r\nconst within = (productValue, valueArr) => {\r\n  if (valueArr.lessThan == 0) return false\r\n  let match = false;\r\n  productValue = stringifyValue(productValue);\r\n  valueArr.forEach(value => {\r\n    if (value.toUpperCase() === productValue.toUpperCase()) {\r\n      match = true\r\n    }\r\n  })\r\n  return match;\r\n}\r\n\r\nconst contains = (productValue, value) => {\r\n  if (value.length == 0) return false\r\n  return productValue.toUpperCase().includes(value[0].toUpperCase());\r\n}\r\n\r\nexport {\r\n  equals,\r\n  greaterThan,\r\n  lessThan,\r\n  any,\r\n  none,\r\n  within,\r\n  contains\r\n}","import {\r\n\tequals,\r\n\tgreaterThan,\r\n\tlessThan,\r\n\tany,\r\n\tnone,\r\n\twithin,\r\n\tcontains\r\n  } from './operatorHelper';\r\n  \r\nconst operatorMap = [\r\n\t{\r\n\t\ttext: \"Equals\",\r\n\t\tid: \"equals\",\r\n\t\ttype: [\"string\", \"number\", \"enumerated\"],\r\n\t\tfn: equals\r\n\t},\r\n\t{\r\n\t\ttext: \"Is greater than\",\r\n\t\tid: \"greater_than\",\r\n\t\ttype: [\"number\"],\r\n\t\tfn: greaterThan\r\n\t},\r\n\t{\r\n\t\ttext: \"Is less than\",\r\n\t\tid: \"less_than\",\r\n\t\ttype: [\"number\"],\r\n\t\tfn: lessThan\r\n\t},\r\n\t{\r\n\t\ttext: \"Has any value\",\r\n\t\tid: \"any\",\r\n\t\ttype: [\"string\", \"number\", \"enumerated\"],\r\n\t\tfn: any\r\n\t},\r\n\t{\r\n\t\ttext: \"Has no value\",\r\n\t\tid: \"none\",\r\n\t\ttype: [\"string\", \"number\", \"enumerated\"],\r\n\t\tfn: none\r\n\t},\r\n\t{\r\n\t\ttext: \"Is any of\",\r\n\t\tid: \"in\",\r\n\t\ttype: [\"string\", \"number\", \"enumerated\"],\r\n\t\tfn: within\r\n\t},\r\n\t{\r\n\t\ttext: \"Contains\",\r\n\t\tid: \"contains\",\r\n\t\ttype: [\"string\"],\r\n\t\tfn: contains\r\n\t}\r\n]\r\n\r\nexport {\r\n\toperatorMap\r\n};\r\n","import React from 'react';\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n} from '@material-ui/core';\r\n\r\nimport { operatorMap } from '../util/operatorMap';\r\n\r\nconst OperatorSelect = ({ operatorInput, propertyInputType, formProps, handleChange }) => {\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        name=\"operatorInput\"\r\n        id=\"operatorInput\"\r\n        value={operatorInput.text}\r\n        inputProps={{ 'aria-label': 'Without label' }}\r\n        onChange={handleChange}\r\n        style={formProps}\r\n        displayEmpty\r\n      >\r\n        <MenuItem value=\"\" disabled>\r\n          Select an Operator...\r\n        </MenuItem>\r\n        {operatorMap.map(operator => {\r\n          //only render valid operators based on chosen property type\r\n          if (operator.type.includes(propertyInputType)) {\r\n            return (\r\n              <MenuItem\r\n                key={operator.id}\r\n                data-operator-id={operator.id}\r\n                value={operator.text}\r\n              >\r\n                {operator.text}\r\n              </MenuItem>\r\n            )\r\n          }\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default OperatorSelect;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tInput,\r\n\tMenuItem,\r\n\tFormControl,\r\n\tSelect\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n\tmutliSelectForm: {\r\n\t\ttextAlign: 'left', \r\n\t\tminWidth: 200, \r\n\t\twidth: 'auto'\r\n\t}\r\n});\r\n\r\nconst MutliValueSelect = ({ valueInput, distinctPropertyValues, handleChange }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<FormControl variant=\"outlined\" className={classes.mutliSelectForm}>\r\n\t\t\t<Select\r\n\t\t\t\tname=\"multiValueInput\"\r\n\t\t\t\tid=\"multiValueInput\"\r\n\t\t\t\tmultiple\r\n\t\t\t\tvalue={valueInput.value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tinput={<Input />}\r\n\t\t\t>\r\n\t\t\t\t{distinctPropertyValues.map(property => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tkey={property}\r\n\t\t\t\t\t\t\tvalue={property}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{property.capitalize()}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport default MutliValueSelect;","import React, { Component } from 'react';\r\nimport {\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport PropertySelect from './PropertySelect';\r\nimport OperatorSelect from './OperatorSelect';\r\nimport MutliValueSelect from './MutliValueSelect';\r\nimport { operatorMap } from '../util/operatorMap';\r\n\r\nconst initialState = {\r\n  propertyInput: {\r\n    id: '',\r\n    name: '',\r\n    type: '',\r\n  },\r\n  operatorInput: {\r\n    text: ''\r\n  },\r\n  valueInput: {\r\n    value: []\r\n  },\r\n  distinctPropertyValues: []\r\n}\r\n\r\nconst formStyle = {\r\n  filterContainer: {\r\n    float: 'left',\r\n    margin: \"1%\"\r\n  },\r\n  btnContainer: {\r\n    float: 'right',\r\n    margin: '1%'\r\n  },\r\n  filterInput: {\r\n    marginLeft: 10, \r\n    marginRight: 10\r\n  }\r\n}\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = initialState\r\n  }\r\n\r\n  /**\r\n   * Parses product data for distinct/unique properties to use in <MutliValueSelect>\r\n   * @param {Object} data, product data from props.data\r\n   * @param {number} propertyId, the id which corresponds to the property eg. 0 = Product Names}\r\n   * @returns {Array} distinct/unique product properties used for \"in\" operator value select\r\n   */\r\n  getDistinctPropertyValues = (data, propertyId) => {\r\n    let distinctPropValues = {};\r\n    data.forEach(product => {\r\n      if (!distinctPropValues[product[propertyId]]) {\r\n        distinctPropValues[product[propertyId]] = null;\r\n      }\r\n    })\r\n    return Object.keys(distinctPropValues);\r\n  }\r\n\r\n  /**\r\n   * Filters product data using operator filter function\r\n   * Updates App filteredData state which is passed to <ProductTable>\r\n   */\r\n  filterData = () => {\r\n    const propertyId = this.state.propertyInput.id;\r\n    const operator = this.state.operatorInput;\r\n    const { value } = this.state.valueInput;\r\n\r\n    if (propertyId && operator.text && value) {\r\n      let filterData = [];\r\n      this.props.data.forEach(product => {\r\n        if (operator.text) {\r\n          if (operator.fn(product[propertyId], value)) {\r\n            filterData.push(product);\r\n          }\r\n        }\r\n      })\r\n      this.props.updateFilteredData(filterData);\r\n    }else{\r\n      this.props.updateFilteredData(this.props.data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates Filter state based on changes in filter selection\r\n   * Calls filterData() when changes are made\r\n   */\r\n  handleChange = (event) => {\r\n    const { name } = event.target;\r\n    let { value } = event.target;\r\n    let newState = {}\r\n    console.log(name)\r\n    switch (name) {\r\n      case 'propertyInput':\r\n        const { propertyType, propertyId } = event.currentTarget.dataset;\r\n        const distinctPropertyValues = this.getDistinctPropertyValues(this.props.data, propertyId);\r\n        let { operatorInput } = this.state;\r\n        \r\n        //check if new property datatype is valid with previous operator, if NOT reset operatorInput\r\n        if (operatorInput.text && !operatorInput.type.includes(propertyType)) {\r\n          operatorInput = initialState.operatorInput;\r\n        }\r\n        newState = {\r\n          propertyInput: {\r\n            id: propertyId,\r\n            name: value,\r\n            type: propertyType,\r\n          },  \r\n          operatorInput: operatorInput,\r\n          valueInput: {\r\n            value: []\r\n          },\r\n          distinctPropertyValues: distinctPropertyValues\r\n        }\r\n        break;\r\n      case 'operatorInput':\r\n        const { operatorId } = event.currentTarget.dataset;\r\n        const operator = operatorMap.find(operator => operator.id === operatorId);\r\n\r\n        newState = {\r\n          operatorInput: operator,\r\n          valueInput: {\r\n            value: []\r\n          }\r\n        }\r\n        break;\r\n      case 'valueInput':\r\n      case 'multiValueInput':\r\n        if (!(value instanceof Array)) {\r\n          value = [value]\r\n        }\r\n        newState = {\r\n          valueInput: { value: value }\r\n        }\r\n        break\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState, ...newState\r\n    }), () => {\r\n      this.filterData()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Clears filter selction and resets filter state and data\r\n   */\r\n  clearInputs = () => {\r\n    this.setState({\r\n      ...initialState\r\n    }, () => {\r\n      this.props.updateFilteredData(this.props.data);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const operatorId = this.state.operatorInput.id;\r\n    return (\r\n      <div>\r\n        <div id=\"filterInputsContainer\" style={formStyle.filterContainer}>\r\n          <PropertySelect\r\n            properties={this.props.properties}\r\n            propertyValue={this.state.propertyInput.name}\r\n            handleChange={this.handleChange}\r\n            formProps={formStyle.filterInput}\r\n          />\r\n          <OperatorSelect\r\n            operatorInput={this.state.operatorInput}\r\n            propertyInputType={this.state.propertyInput.type}\r\n            handleChange={this.handleChange}\r\n            formProps={formStyle.filterInput}\r\n          />\r\n          {operatorId === \"in\" ?\r\n            <MutliValueSelect\r\n              valueInput={this.state.valueInput}\r\n              distinctPropertyValues={this.state.distinctPropertyValues}\r\n              handleChange={this.handleChange}\r\n              style={formStyle.filterInput}\r\n            />\r\n            : (operatorId && operatorId != \"any\" && operatorId != \"none\") ?\r\n              <TextField\r\n                id=\"valueInput\"\r\n                name=\"valueInput\"\r\n                type={ this.state.propertyInput.type === \"number\" ? \"number\" : \"text\" }\r\n                value={this.state.valueInput.value}\r\n                onChange={this.handleChange}\r\n                style={formStyle.filterInput}\r\n              />\r\n              : null}\r\n        </div>\r\n        <div id=\"clearBtnContainer\" style={formStyle.btnContainer}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            name=\"clearButton\"\r\n            style={{ textTransform: 'none' }}\r\n            onClick={this.clearInputs}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tBox\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\tcontainer: {\r\n\t\tborderBottom: 1,\r\n\t},\r\n\ttableRow: {\r\n\t\tbackground: 'rgba(136,206,251,0.15)',\r\n\t},\r\n\theader: {\r\n\t\tfontWeight: 'bold',\r\n\t\tbackground: 'rgba(136,206,251,0.3)',\r\n\t\tpaddingTop: 2,\r\n\t\tpaddingBottom: 2,\r\n\t},\r\n});\r\n\r\nconst ProductTable = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { properties, data } = props;\r\n\r\n\treturn (\r\n\t\t<Box borderBottom={1}>\r\n\t\t\t<TableContainer className={classes.container}>\r\n\t\t\t\t<Table className={classes.table}>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow className={classes.tableRow}>\r\n\t\t\t\t\t\t\t{properties.map((property, index) => (\r\n\t\t\t\t\t\t\t\t<TableCell key={`header-${index}`} className={classes.header}>\r\n\t\t\t\t\t\t\t\t\t{property.name.capitalize()}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{ data.map((product, index) => (\r\n\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\tkey={`product-${product[0]}`}\r\n\t\t\t\t\t\t\t\tclassName={index % 2 ? classes.tableRow : null}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* product is Object so need to use Object.values to map over correctly */}\r\n\t\t\t\t\t\t\t\t{ Object.values(product).map((property, index) => (\r\n\t\t\t\t\t\t\t\t\t<TableCell key={`property-${index}`}>{property}</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default ProductTable;","import React, { Component } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport ProductTable from './components/ProductTable';\nimport { Container, Box } from '@material-ui/core';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      products: [],\n      properties: [],\n      data: [],\n      filteredData: [],   \n      isDataLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    this.loadDataStore();\n  }\n\n  /**\n   * Intializes datastore attributes into React state and loads data for <Table>\n   */\n  loadDataStore = () => {\n    this.setState({\n      products: window.datastore.getProducts(),\n      properties: window.datastore.getProperties(),\n    }, () => {\n      let data = this.parseProductData(this.state.properties);\n      this.setState({\n        data: data,\n        filteredData: data,\n        isDataLoaded: true\n      })\n    })\n  }\n  /**\n   * Parses datastore.products and flattens dataset which is passed to <Table> component\n   * @param   {Object} properties, this.state.properties which is columns in Table\n   * @returns {Array} Array of objects containing product property:value pairs\n   */\n  parseProductData = (properties) => {\n    return this.state.products.map(product => {\n      let productData = {}\n      properties.forEach(property => {\n        let productValue = product.property_values[property.id] ? product.property_values[property.id].value : null;\n        productData[property.id] = productValue;\n      })\n      return productData;\n    })\n  }\n\n  /**\n   * Function passed to <Filter> to update filteredData state passed to <ProductTable>\n   * @param {*} data \n   */\n  updateFilteredData = (data) => {\n    this.setState({\n      filteredData: [...data]\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Box mt={2} borderTop={1} borderLeft={1} borderRight={1} overflow=\"hidden\">\n          <Filter\n            properties={this.state.properties}\n            data={this.state.data}\n            updateFilteredData={this.updateFilteredData}\n          />\n        </Box>\n        { !this.state.isDataLoaded ? null : \n          <ProductTable properties={this.state.properties} data={this.state.filteredData} />\n        }\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './resources/datastore';\n\n/**\n * Define capitalize method on String prototype to use on String datatypes\n * @returns String with first character as uppercase\n */\nString.prototype.capitalize = function() {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}